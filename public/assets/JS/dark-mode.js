// Dark Mode Toggle Script COMPLET - Version Florale
(function() {
    // V√©rifier le th√®me sauvegard√© ou utiliser le th√®me syst√®me
    const savedTheme = localStorage.getItem('theme');
    const systemDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // D√©finir le th√®me initial
    const initialTheme = savedTheme || (systemDarkMode ? 'dark' : 'light');
    
    // Appliquer le th√®me initial
    document.documentElement.setAttribute('data-theme', initialTheme);
    
    // Cr√©er le bouton de toggle
    function createThemeToggle() {
        const toggleButton = document.createElement('button');
        toggleButton.className = 'theme-toggle';
        toggleButton.setAttribute('aria-label', 'Changer le th√®me');
        toggleButton.setAttribute('title', initialTheme === 'dark' ? 'Passer au mode jour (tournesol)' : 'Passer au mode nuit (fleur nocturne)');
        toggleButton.innerHTML = getToggleIcon(initialTheme);
        
        // Ajouter le bouton au DOM
        document.body.appendChild(toggleButton);
        
        // Ajouter l'√©v√©nement de clic
        toggleButton.addEventListener('click', toggleTheme);
        
        // Animation d'attention au d√©but avec effet floral
        setTimeout(() => {
            toggleButton.style.animation = 'floraleGlow 3s infinite';
            setTimeout(() => {
                toggleButton.style.animation = 'none';
            }, 6000);
        }, 1000);
        
        return toggleButton;
    }
    
    // Obtenir l'ic√¥ne florale appropri√©e pour le bouton
    function getToggleIcon(theme) {
        // Mode sombre = afficher le tournesol (pour passer au jour)
        // Mode clair = afficher la fleur nocturne (pour passer √† la nuit)
        return theme === 'dark' ? 'üåª' : 'üå∏';
    }
    
    // Fonction pour changer de th√®me
    function toggleTheme() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        // Appliquer le nouveau th√®me
        document.documentElement.setAttribute('data-theme', newTheme);
        
        // Sauvegarder dans localStorage
        localStorage.setItem('theme', newTheme);
        
        // Mettre √† jour l'ic√¥ne du bouton
        const toggleButton = document.querySelector('.theme-toggle');
        if (toggleButton) {
            toggleButton.innerHTML = getToggleIcon(newTheme);
            
            // Mettre √† jour le title avec les noms de fleurs
            toggleButton.setAttribute('title', 
                newTheme === 'dark' ? 'Passer au mode jour (tournesol)' : 'Passer au mode nuit (fleur nocturne)'
            );
            
            // Animation florale du bouton lors du clic
            toggleButton.style.transform = 'scale(1.3) rotate(15deg)';
            toggleButton.style.filter = 'brightness(1.5)';
            setTimeout(() => {
                toggleButton.style.transform = 'scale(1) rotate(0deg)';
                toggleButton.style.filter = 'brightness(1)';
            }, 300);
        }
        
        // Effet de transition visuel
        document.body.style.transition = 'background-color 0.5s ease';
        
        // Log po√©tique pour debug
        const flowerMessage = newTheme === 'dark' ? 
            'Mode nuit activ√© üå∏ - Les fleurs nocturnes s\'√©panouissent...' : 
            'Mode jour activ√© üåª - Le tournesol suit la lumi√®re...';
        console.log(flowerMessage);
    }
    
    // √âcouter les changements de pr√©f√©rence syst√®me
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
        // Ne changer automatiquement que si l'utilisateur n'a pas de pr√©f√©rence sauvegard√©e
        if (!localStorage.getItem('theme')) {
            const newTheme = e.matches ? 'dark' : 'light';
            document.documentElement.setAttribute('data-theme', newTheme);
            
            const toggleButton = document.querySelector('.theme-toggle');
            if (toggleButton) {
                toggleButton.innerHTML = getToggleIcon(newTheme);
                toggleButton.setAttribute('title', 
                    newTheme === 'dark' ? 'Passer au mode jour (tournesol)' : 'Passer au mode nuit (fleur nocturne)'
                );
            }
        }
    });
    
    // Initialiser quand le DOM est pr√™t
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', createThemeToggle);
    } else {
        createThemeToggle();
    }
    
    // Exposer la fonction toggle globalement pour une utilisation √©ventuelle
    window.toggleTheme = toggleTheme;
    
    // Fonction pour v√©rifier si le dark mode est actif
    window.isDarkMode = function() {
        return document.documentElement.getAttribute('data-theme') === 'dark';
    };
    
    // Fonction pour forcer un th√®me avec message floral
    window.setTheme = function(theme) {
        if (theme === 'dark' || theme === 'light') {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);
            
            const toggleButton = document.querySelector('.theme-toggle');
            if (toggleButton) {
                toggleButton.innerHTML = getToggleIcon(theme);
                toggleButton.setAttribute('title', 
                    theme === 'dark' ? 'Passer au mode jour (tournesol)' : 'Passer au mode nuit (fleur nocturne)'
                );
            }
            
            const flowerMessage = theme === 'dark' ? 
                'Th√®me nuit forc√© üå∏ - Jardin nocturne activ√©' : 
                'Th√®me jour forc√© üåª - Jardin ensoleill√© activ√©';
            console.log(flowerMessage);
        }
    };
    
})();

// Fonction d'aide pour v√©rifier le th√®me actuel
function getCurrentTheme() {
    return document.documentElement.getAttribute('data-theme') || 'light';
}

// Ajouter les animations florales si elles n'existent pas
function addFloralAnimations() {
    if (!document.getElementById('floral-animations')) {
        const style = document.createElement('style');
        style.id = 'floral-animations';
        style.textContent = `
            @keyframes floraleGlow {
                0% { 
                    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
                    transform: scale(1);
                }
                33% { 
                    box-shadow: 0 6px 25px rgba(255, 182, 193, 0.8);
                    transform: scale(1.05);
                }
                66% { 
                    box-shadow: 0 6px 25px rgba(255, 215, 0, 0.8);
                    transform: scale(1.05);
                }
                100% { 
                    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
                    transform: scale(1);
                }
            }
            
            .theme-toggle {
                transition: all 0.3s ease !important;
            }
            
            .theme-toggle:hover {
                transform: scale(1.15) !important;
                filter: brightness(1.2) contrast(1.1) !important;
            }
        `;
        document.head.appendChild(style);
    }
}

// Initialiser les animations
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', addFloralAnimations);
} else {
    addFloralAnimations();
}